"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/app/ChartDataPrepare/pages.ts":
/*!*******************************************!*\
  !*** ./src/app/ChartDataPrepare/pages.ts ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CollectStockValueData: function() { return /* binding */ CollectStockValueData; },\n/* harmony export */   CollectTimeData: function() { return /* binding */ CollectTimeData; },\n/* harmony export */   CreateChartData: function() { return /* binding */ CreateChartData; }\n/* harmony export */ });\nasync function CollectTimeData(response, stock_name, financial_statement) {\n    if (\"error\" in response) {\n        console.error(\"Error:\", response.error);\n        return [];\n    }\n    return response.data.filter((item)=>item.hisse_adi === stock_name && item.bilanco_kalemi === stock_name + financial_statement).map((item)=>item.zaman);\n}\nasync function CollectStockValueData(response, stock_name, financial_statement) {\n    if (\"error\" in response) {\n        console.error(\"Error:\", response.error);\n        return [];\n    }\n    return response.data.filter((item)=>item.hisse_adi === stock_name && item.bilanco_kalemi === stock_name + financial_statement).map((item)=>{\n        return parseFloat(item.deger.toString().replace(/\\./g, \"\").replace(\",\", \".\"));\n    });\n}\nasync function ConvertStockValuesToUSD(stockName, financialStatement) {\n    try {\n        const responseData = await getData(); // Burada uygun bir şekilde veri alımını gerçekleştirmeniz gerekiyor, bu kodu uygun şekilde değiştirmelisiniz.\n        const timeData = await CollectTimeData(responseData, stockName, financialStatement);\n        const stockValues = await CollectStockValueData(responseData, stockName, financialStatement);\n        // Örnek bir döviz kuru listesi. Bu listede sırayla her bir tarihe karşılık gelen döviz kuru bulunmalıdır.\n        const exchangeRates = [\n            8.50,\n            8.30\n        ];\n        // Her hisse değerini uygun döviz kuruyla bölerek dönüştürür.\n        const stockValuesInUSD = stockValues.map((value, index)=>{\n            const exchangeRate = exchangeRates[index]; // İlgili tarihe karşılık gelen döviz kuru\n            return value / exchangeRate; // Dönüştürülmüş hisse değeri\n        });\n        return stockValuesInUSD;\n    } catch (error) {\n        console.error(\"Error:\", error);\n        return [];\n    }\n}\nfunction CreateChartData(x_list, y_list) {\n    if (!Array.isArray(x_list) || !Array.isArray(y_list)) {\n        console.error(\"not arr.\");\n        return [];\n    } else if (x_list.length === 0 || y_list.length === 0) {\n        console.error(\"empty arr.\");\n        return [];\n    }\n    x_list.reverse();\n    y_list.reverse();\n    const chart_data = x_list.map((x, index)=>{\n        const y = y_list[index];\n        return {\n            x: x,\n            y: y\n        };\n    });\n    return chart_data;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvQ2hhcnREYXRhUHJlcGFyZS9wYWdlcy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFFTyxlQUFlQSxnQkFBZ0JDLFFBQXNCLEVBQUVDLFVBQWtCLEVBQUVDLG1CQUEyQjtJQUN6RyxJQUFJLFdBQVdGLFVBQVU7UUFDckJHLFFBQVFDLEtBQUssQ0FBQyxVQUFVSixTQUFTSSxLQUFLO1FBQ3RDLE9BQU8sRUFBRTtJQUNiO0lBRUEsT0FBT0osU0FBU0ssSUFBSSxDQUNuQkMsTUFBTSxDQUFDLENBQUNDLE9BQWNBLEtBQUtDLFNBQVMsS0FBS1AsY0FBY00sS0FBS0UsY0FBYyxLQUFLUixhQUFhQyxxQkFDNUZRLEdBQUcsQ0FBQyxDQUFDSCxPQUFhQSxLQUFLSSxLQUFLO0FBQ2pDO0FBRU8sZUFBZUMsc0JBQXNCWixRQUFzQixFQUFFQyxVQUFrQixFQUFFQyxtQkFBMkI7SUFDL0csSUFBSSxXQUFXRixVQUFVO1FBQ3JCRyxRQUFRQyxLQUFLLENBQUMsVUFBVUosU0FBU0ksS0FBSztRQUN0QyxPQUFPLEVBQUU7SUFDYjtJQUVBLE9BQU9KLFNBQVNLLElBQUksQ0FDbkJDLE1BQU0sQ0FBQyxDQUFDQyxPQUFjQSxLQUFLQyxTQUFTLEtBQUtQLGNBQWNNLEtBQUtFLGNBQWMsS0FBS1IsYUFBYUMscUJBQzVGUSxHQUFHLENBQUMsQ0FBQ0g7UUFDRixPQUFPTSxXQUFXTixLQUFLTyxLQUFLLENBQUNDLFFBQVEsR0FBR0MsT0FBTyxDQUFDLE9BQU8sSUFBSUEsT0FBTyxDQUFDLEtBQUs7SUFDNUU7QUFDSjtBQUVBLGVBQWVDLHdCQUF3QkMsU0FBaUIsRUFBRUMsa0JBQTBCO0lBQ2hGLElBQUk7UUFDQSxNQUFNQyxlQUE2QixNQUFNQyxXQUFXLDhHQUE4RztRQUNsSyxNQUFNQyxXQUFxQixNQUFNdkIsZ0JBQWdCcUIsY0FBY0YsV0FBV0M7UUFDMUUsTUFBTUksY0FBd0IsTUFBTVgsc0JBQXNCUSxjQUFjRixXQUFXQztRQUVuRiwwR0FBMEc7UUFDMUcsTUFBTUssZ0JBQTBCO1lBQzVCO1lBQ0E7U0FFSDtRQUVELDZEQUE2RDtRQUM3RCxNQUFNQyxtQkFBNkJGLFlBQVliLEdBQUcsQ0FBQyxDQUFDZ0IsT0FBZUM7WUFDL0QsTUFBTUMsZUFBdUJKLGFBQWEsQ0FBQ0csTUFBTSxFQUFFLDBDQUEwQztZQUM3RixPQUFPRCxRQUFRRSxjQUFjLDZCQUE2QjtRQUM5RDtRQUVBLE9BQU9IO0lBQ1gsRUFBRSxPQUFPckIsT0FBTztRQUNaRCxRQUFRQyxLQUFLLENBQUMsVUFBVUE7UUFDeEIsT0FBTyxFQUFFO0lBQ2I7QUFDSjtBQUdPLFNBQVN5QixnQkFBZ0JDLE1BQWdCLEVBQUVDLE1BQWdCO0lBRTlELElBQUksQ0FBQ0MsTUFBTUMsT0FBTyxDQUFDSCxXQUFXLENBQUNFLE1BQU1DLE9BQU8sQ0FBQ0YsU0FBUztRQUNsRDVCLFFBQVFDLEtBQUssQ0FBQztRQUNkLE9BQU8sRUFBRTtJQUNiLE9BQU8sSUFBSTBCLE9BQU9JLE1BQU0sS0FBSyxLQUFLSCxPQUFPRyxNQUFNLEtBQUssR0FBRztRQUNuRC9CLFFBQVFDLEtBQUssQ0FBQztRQUNkLE9BQU8sRUFBRTtJQUNiO0lBRUEwQixPQUFPSyxPQUFPO0lBQ2RKLE9BQU9JLE9BQU87SUFFZCxNQUFNQyxhQUFhTixPQUFPcEIsR0FBRyxDQUFDLENBQUMyQixHQUFHVjtRQUM5QixNQUFNVyxJQUFJUCxNQUFNLENBQUNKLE1BQU07UUFDdkIsT0FBTztZQUNIVSxHQUFHQTtZQUNIQyxHQUFHQTtRQUNQO0lBQ0o7SUFFQSxPQUFPRjtBQUNYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9hcHAvQ2hhcnREYXRhUHJlcGFyZS9wYWdlcy50cz9hNTEwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RGF0YSwgRXJyb3IgfSBmcm9tICcuLi9EYXRhU2VydmljZS9wYWdlcyc7XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gQ29sbGVjdFRpbWVEYXRhKHJlc3BvbnNlOiBEYXRhIHwgRXJyb3IsIHN0b2NrX25hbWU6IHN0cmluZywgZmluYW5jaWFsX3N0YXRlbWVudDogc3RyaW5nKTogUHJvbWlzZTxzdHJpbmdbXT4ge1xyXG4gICAgaWYgKCdlcnJvcicgaW4gcmVzcG9uc2UpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvcjonLCByZXNwb25zZS5lcnJvcik7XHJcbiAgICAgICAgcmV0dXJuIFtdO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiByZXNwb25zZS5kYXRhXHJcbiAgICAuZmlsdGVyKChpdGVtIDphbnkpID0+IGl0ZW0uaGlzc2VfYWRpID09PSBzdG9ja19uYW1lICYmIGl0ZW0uYmlsYW5jb19rYWxlbWkgPT09IHN0b2NrX25hbWUgKyBmaW5hbmNpYWxfc3RhdGVtZW50KVxyXG4gICAgLm1hcCgoaXRlbTphbnkpID0+IGl0ZW0uemFtYW4pO1xyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gQ29sbGVjdFN0b2NrVmFsdWVEYXRhKHJlc3BvbnNlOiBEYXRhIHwgRXJyb3IsIHN0b2NrX25hbWU6IHN0cmluZywgZmluYW5jaWFsX3N0YXRlbWVudDogc3RyaW5nKTogUHJvbWlzZTxudW1iZXJbXT4ge1xyXG4gICAgaWYgKCdlcnJvcicgaW4gcmVzcG9uc2UpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvcjonLCByZXNwb25zZS5lcnJvcik7XHJcbiAgICAgICAgcmV0dXJuIFtdO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiByZXNwb25zZS5kYXRhXHJcbiAgICAuZmlsdGVyKChpdGVtIDphbnkpID0+IGl0ZW0uaGlzc2VfYWRpID09PSBzdG9ja19uYW1lICYmIGl0ZW0uYmlsYW5jb19rYWxlbWkgPT09IHN0b2NrX25hbWUgKyBmaW5hbmNpYWxfc3RhdGVtZW50KVxyXG4gICAgLm1hcCgoaXRlbSA6YW55KSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHBhcnNlRmxvYXQoaXRlbS5kZWdlci50b1N0cmluZygpLnJlcGxhY2UoL1xcLi9nLCAnJykucmVwbGFjZSgnLCcsICcuJykpO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbmFzeW5jIGZ1bmN0aW9uIENvbnZlcnRTdG9ja1ZhbHVlc1RvVVNEKHN0b2NrTmFtZTogc3RyaW5nLCBmaW5hbmNpYWxTdGF0ZW1lbnQ6IHN0cmluZyk6IFByb21pc2U8bnVtYmVyW10+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgcmVzcG9uc2VEYXRhOiBEYXRhIHwgRXJyb3IgPSBhd2FpdCBnZXREYXRhKCk7IC8vIEJ1cmFkYSB1eWd1biBiaXIgxZ9la2lsZGUgdmVyaSBhbMSxbcSxbsSxIGdlcsOnZWtsZcWfdGlybWVuaXogZ2VyZWtpeW9yLCBidSBrb2R1IHV5Z3VuIMWfZWtpbGRlIGRlxJ9pxZ90aXJtZWxpc2luaXouXHJcbiAgICAgICAgY29uc3QgdGltZURhdGE6IHN0cmluZ1tdID0gYXdhaXQgQ29sbGVjdFRpbWVEYXRhKHJlc3BvbnNlRGF0YSwgc3RvY2tOYW1lLCBmaW5hbmNpYWxTdGF0ZW1lbnQpO1xyXG4gICAgICAgIGNvbnN0IHN0b2NrVmFsdWVzOiBudW1iZXJbXSA9IGF3YWl0IENvbGxlY3RTdG9ja1ZhbHVlRGF0YShyZXNwb25zZURhdGEsIHN0b2NrTmFtZSwgZmluYW5jaWFsU3RhdGVtZW50KTtcclxuXHJcbiAgICAgICAgLy8gw5ZybmVrIGJpciBkw7Z2aXoga3VydSBsaXN0ZXNpLiBCdSBsaXN0ZWRlIHPEsXJheWxhIGhlciBiaXIgdGFyaWhlIGthcsWfxLFsxLFrIGdlbGVuIGTDtnZpeiBrdXJ1IGJ1bHVubWFsxLFkxLFyLlxyXG4gICAgICAgIGNvbnN0IGV4Y2hhbmdlUmF0ZXM6IG51bWJlcltdID0gW1xyXG4gICAgICAgICAgICA4LjUwLCAvLyAyMDI0LzMgdGFyaWhpIGnDp2luIGRvbGFyIGt1cnVcclxuICAgICAgICAgICAgOC4zMCwgLy8gMjAyMy8xMiB0YXJpaGkgacOnaW4gZG9sYXIga3VydVxyXG4gICAgICAgICAgICAvLyBEacSfZXIgdGFyaWhsZXIgacOnaW4gZGUgYXluxLEgxZ9la2lsZGUgZMO2dml6IGt1cmxhcsSxbsSxIGVrbGV5aW5cclxuICAgICAgICBdO1xyXG5cclxuICAgICAgICAvLyBIZXIgaGlzc2UgZGXEn2VyaW5pIHV5Z3VuIGTDtnZpeiBrdXJ1eWxhIGLDtmxlcmVrIGTDtm7DvMWfdMO8csO8ci5cclxuICAgICAgICBjb25zdCBzdG9ja1ZhbHVlc0luVVNEOiBudW1iZXJbXSA9IHN0b2NrVmFsdWVzLm1hcCgodmFsdWU6IG51bWJlciwgaW5kZXg6IG51bWJlcikgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBleGNoYW5nZVJhdGU6IG51bWJlciA9IGV4Y2hhbmdlUmF0ZXNbaW5kZXhdOyAvLyDEsGxnaWxpIHRhcmloZSBrYXLFn8SxbMSxayBnZWxlbiBkw7Z2aXoga3VydVxyXG4gICAgICAgICAgICByZXR1cm4gdmFsdWUgLyBleGNoYW5nZVJhdGU7IC8vIETDtm7DvMWfdMO8csO8bG3DvMWfIGhpc3NlIGRlxJ9lcmlcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgcmV0dXJuIHN0b2NrVmFsdWVzSW5VU0Q7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yOicsIGVycm9yKTtcclxuICAgICAgICByZXR1cm4gW107XHJcbiAgICB9XHJcbn1cclxuXHJcbiAgXHJcbmV4cG9ydCBmdW5jdGlvbiBDcmVhdGVDaGFydERhdGEoeF9saXN0OiBzdHJpbmdbXSwgeV9saXN0OiBudW1iZXJbXSk6IHsgeDogc3RyaW5nLCB5OiBudW1iZXIgfVtdIHtcclxuXHJcbiAgICBpZiAoIUFycmF5LmlzQXJyYXkoeF9saXN0KSB8fCAhQXJyYXkuaXNBcnJheSh5X2xpc3QpKSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcihcIm5vdCBhcnIuXCIpO1xyXG4gICAgICAgIHJldHVybiBbXTtcclxuICAgIH0gZWxzZSBpZiAoeF9saXN0Lmxlbmd0aCA9PT0gMCB8fCB5X2xpc3QubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcihcImVtcHR5IGFyci5cIik7XHJcbiAgICAgICAgcmV0dXJuIFtdO1xyXG4gICAgfVxyXG5cclxuICAgIHhfbGlzdC5yZXZlcnNlKCk7XHJcbiAgICB5X2xpc3QucmV2ZXJzZSgpO1xyXG5cclxuICAgIGNvbnN0IGNoYXJ0X2RhdGEgPSB4X2xpc3QubWFwKCh4LCBpbmRleCkgPT4ge1xyXG4gICAgICAgIGNvbnN0IHkgPSB5X2xpc3RbaW5kZXhdO1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHg6IHgsXHJcbiAgICAgICAgICAgIHk6IHlcclxuICAgICAgICB9O1xyXG4gICAgfSk7XHJcblxyXG4gICAgcmV0dXJuIGNoYXJ0X2RhdGE7XHJcbn0iXSwibmFtZXMiOlsiQ29sbGVjdFRpbWVEYXRhIiwicmVzcG9uc2UiLCJzdG9ja19uYW1lIiwiZmluYW5jaWFsX3N0YXRlbWVudCIsImNvbnNvbGUiLCJlcnJvciIsImRhdGEiLCJmaWx0ZXIiLCJpdGVtIiwiaGlzc2VfYWRpIiwiYmlsYW5jb19rYWxlbWkiLCJtYXAiLCJ6YW1hbiIsIkNvbGxlY3RTdG9ja1ZhbHVlRGF0YSIsInBhcnNlRmxvYXQiLCJkZWdlciIsInRvU3RyaW5nIiwicmVwbGFjZSIsIkNvbnZlcnRTdG9ja1ZhbHVlc1RvVVNEIiwic3RvY2tOYW1lIiwiZmluYW5jaWFsU3RhdGVtZW50IiwicmVzcG9uc2VEYXRhIiwiZ2V0RGF0YSIsInRpbWVEYXRhIiwic3RvY2tWYWx1ZXMiLCJleGNoYW5nZVJhdGVzIiwic3RvY2tWYWx1ZXNJblVTRCIsInZhbHVlIiwiaW5kZXgiLCJleGNoYW5nZVJhdGUiLCJDcmVhdGVDaGFydERhdGEiLCJ4X2xpc3QiLCJ5X2xpc3QiLCJBcnJheSIsImlzQXJyYXkiLCJsZW5ndGgiLCJyZXZlcnNlIiwiY2hhcnRfZGF0YSIsIngiLCJ5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/ChartDataPrepare/pages.ts\n"));

/***/ })

});